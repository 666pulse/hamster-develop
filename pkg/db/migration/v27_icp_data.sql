INSERT INTO aline.t_template_type (id, name, description, type, create_time, update_time, delete_time) VALUES (8, 'Functional', 'Functional type contract', 1, '2023-08-23 16:48:51', '2023-08-23 16:48:53', null);
INSERT INTO aline.t_template_type (id, name, description, type, create_time, update_time, delete_time) VALUES (9, 'App', 'App type contract', 1, '2023-08-23 16:48:51', '2023-08-23 16:48:51', null);
INSERT INTO aline.t_template_type (id, name, description, type, create_time, update_time, delete_time) VALUES (10, 'Game', 'Game type contract', 1, '2023-08-23 16:48:51', '2023-08-23 16:48:51', null);
INSERT INTO aline.t_template_type (id, name, description, type, create_time, update_time, delete_time) VALUES (11, 'Entry-level', 'Entry-level contract', 1, '2023-08-23 16:48:51', '2023-08-23 16:48:51', null);


INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (72, 8, 'threshold_ecdsa', 'We present a minimal example canister smart contract for showcasing the threshold ECDSA API.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (67, 8, 'quicksort', 'This example implements the quick sort algorithm.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (62, 8, 'factorial', 'This example demonstrates a recursive mathematical function that calculates the product of all positive integers less than or equal to its input.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (68, 8, 'random_maze', 'The example generates a random maze using cryptographic randomness.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (61, 8, 'echo', 'This example demonstrates a simple echo effect', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-25 10:50:19', '2023-08-25 10:50:19', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (59, 8, 'actor_classes', 'Demonstrated the simple use of the actor class, which allows programs to dynamically install new actors (i.e. containers)', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-24 17:44:35', '2023-08-24 17:44:35', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (57, 8, 'actor_reference', 'Bind the name IC to the actor obtained by referring to the interface of "aaaaa aa" through the assertion text actor', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmYCLdgTEmLwVuecuzzXxC9aUhsPAW2cLd6TDi9QBEsQCn', '2023-08-23 17:30:45', '2023-08-23 17:30:47', null, 1, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (60, 9, 'counter', 'This example demonstrates a counter application. It uses orthogonal persistent counter variables to store arbitrary precision natural numbers representing the current value of the counter.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-25 10:23:41', '2023-08-25 10:23:41', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (64, 9, 'hello_cycles', 'The hello_cycles sample project provides a simple example to illustrate how you might add functions to receive cycles', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (65, 9, 'http_counter', 'The example demonstrates a counter dapp and an HTTP interface. It is essentially an iteration on the counter canister which adds native HTTP interfaces.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (66, 9, 'persistent_storage', 'The example dapp shows how to build a simple dapp in Motoko, which will have persistent storage. The dapp is a simple counter, which will increment a counter, retrieve the counter value and reset the counter value by calling backend functions.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (69, 9, 'send_http_post', 'The purpose of this dapp is to give developers a minimal dapp that uses the IC''s HTTPS outcalls feature to make a POST request.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (70, 9, 'simple_to_do', 'This example illustrates how to create a simple to-do checklist application.', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 1, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (54, 9, 'calc', 'This template demonstrates a basic calculator dapp. It uses an orthogonally persistent cell variable to store an arbitrary precision integer that represents the result of the most recent calculation.', 1, '0.0.1', 'https://g.alpha.hamsternet.io/ipfs/QmUiEafbupgSwDWWpG5Q8fXrHLBHhMBfJK1APzdcgWnjFT', '2023-08-11 15:11:40', '2023-08-11 15:11:40', null, 0, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (71, 10, 'superheroes', 'This example demonstrates how to build a CRUD application on the Internet Computer using Motoko ', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmPeStbFnayXcCDpBLfzdZVucTKDfrFhSybMcafvJu4t1u', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 1, null, 7, null, null);
INSERT INTO aline.t_template (id, template_type_id, name, description, audited, last_version, logo, create_time, update_time, delete_time, whether_display, image, language_type, deploy_type, label_display) VALUES (63, 11, 'hello_world', 'This example demonstrates a canister called hello_world', 1, '1.0.0', 'https://g.alpha.hamsternet.io/ipfs/QmddQVuHLwvLS7qDnvLhUkKJZJC7d7ApcJMm5xsVWgjRwa', '2023-08-25 11:37:52', '2023-08-25 11:37:54', null, 1, null, 7, null, null);



INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (54, 54, 'calc', 1, '', 'This template demonstrates a basic calculator dapp. It uses an orthogonally persistent cell variable to store an arbitrary precision integer that represents the result of the most recent calculation.', '', '', '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"add","Func":{"ArgTypes":[{"Name":null,"Data":"int"}],"ResTypes":[{"Name":null,"Data":"int"}],"Annotation":null},"ID":null},{"Name":"clearall","Func":{"ArgTypes":null,"ResTypes":null,"Annotation":null},"ID":null},{"Name":"div","Func":{"ArgTypes":[{"Name":null,"Data":"int"}],"ResTypes":[{"Name":null,"Data":{"Data":"int"}}],"Annotation":null},"ID":null},{"Name":"mul","Func":{"ArgTypes":[{"Name":null,"Data":"int"}],"ResTypes":[{"Name":null,"Data":"int"}],"Annotation":null},"ID":null},{"Name":"sub","Func":{"ArgTypes":[{"Name":null,"Data":"int"}],"ResTypes":[{"Name":null,"Data":"int"}],"Annotation":null},"ID":null}],"MethodId":null}]}', '', 'hamster-template', 'https://github.com/hamster-template/calc.git', 'calc', 'main', '0.0.1', 'https://raw.githubusercontent.com/hamster-template/calc/main/src/Main.mo', '2023-08-11 15:11:40', '2023-08-11 15:11:40', null, 'Overview', 'This example demonstrates a basic calculator dapp. It uses an orthogonally persistent cell variable to store an arbitrary precision integer that represents the result of the most recent calculation.

The dapp provides an interface that exposes the following methods:

add: accepts input and performs addition.
sub: accepts input and performs subtraction.
mul: accepts input and performs multiplication.
div: accepts input, performs division, and returns an optional type to guard against division by zero.
clearall: clears the cell variable by setting its value to zero.
This is a Motoko example that does not currently have a Rust variant.

', null, null, null, null);
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (57, 57, 'actor_reference', 1, null, 'Bind the name IC to the actor obtained by referring to the interface of "aaaaa aa" through the assertion text actor', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"burn","Func":{"ArgTypes":null,"ResTypes":null,"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/actor_reference.git', 'actor_reference', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/actor_reference/main/src/actor_reference/main.mo', '2023-08-23 17:51:48', '2023-08-23 17:51:50', null, null, null, null, null, null, 'main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (59, 59, 'actor_classes', 1, null, 'Demonstrated the simple use of the actor class, which allows programs to dynamically install new actors (i.e. containers)', null, null, '{"Definitions":[{"Id":"Value","Data":"text"},{"Id":"Key","Data":"nat"}],"Services":[{"ID":null,"Methods":[{"Name":"get","Func":{"ArgTypes":[{"Name":null,"Data":"Key"}],"ResTypes":[{"Name":null,"Data":{"Data":"Value"}}],"Annotation":null},"ID":null},{"Name":"put","Func":{"ArgTypes":[{"Name":null,"Data":"Key"},{"Name":null,"Data":"Value"}],"ResTypes":null,"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/actor_classes.git', 'actor_classes', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/actor_classes/main/src/map/Map.mo', '2023-08-24 17:46:50', '2023-08-24 17:46:50', null, null, null, null, null, null, 'Map.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (60, 60, 'counter', 1, null, 'This example demonstrates a counter application. It uses orthogonal persistent counter variables to store arbitrary precision natural numbers representing the current value of the counter.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"get","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":"query"},"ID":null},{"Name":"inc","Func":{"ArgTypes":null,"ResTypes":null,"Annotation":null},"ID":null},{"Name":"set","Func":{"ArgTypes":[{"Name":null,"Data":"nat"}],"ResTypes":null,"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/counter.git', 'counter', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/counter/main/src/Main.mo', '2023-08-25 10:25:06', '2023-08-25 10:25:06', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (61, 61, 'echo', 1, null, 'This example demonstrates a simple echo effect', ' where an application sends back the data it receives.', null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"say","Func":{"ArgTypes":[{"Name":null,"Data":"text"}],"ResTypes":[{"Name":null,"Data":"text"}],"Annotation":"query"},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/echo.git', 'echo', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/echo/main/src/Main.mo', '2023-08-25 10:25:06', '2023-08-25 10:25:06', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (62, 62, 'factorial', 1, null, 'This example demonstrates a recursive mathematical function that calculates the product of all positive integers less than or equal to its input.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"fac","Func":{"ArgTypes":[{"Name":null,"Data":"nat"}],"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":"query"},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/factorial.git', 'factorial', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/factorial/main/src/Main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (63, 63, 'hello_world', 1, null, 'This example demonstrates a canister called hello_world', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"main","Func":{"ArgTypes":null,"ResTypes":null,"Annotation":"oneway"},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/hello_world.git', 'hello_world', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/hello_world/main/src/Main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (64, 64, 'hello_cycles', 1, null, 'The hello_cycles sample project provides a simple example to illustrate how you might add functions to receive cycles', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"transfer","Func":{"ArgTypes":[{"Name":null,"Data":{"ArgTypes":null,"ResTypes":null,"Annotation":null}},{"Name":null,"Data":"nat"}],"ResTypes":[{"Name":null,"Data":[{"Nat":null,"Name":"refunded","Data":"nat","NatData":null,"NameData":null}]}],"Annotation":null},"ID":null},{"Name":"wallet_balance","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":null},"ID":null},{"Name":"wallet_receive","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":[{"Nat":null,"Name":"accepted","Data":"nat64","NatData":null,"NameData":null}]}],"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/hello_cycles.git', 'hello_cycles', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/hello_cycles/main/src/hello_cycles/main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (65, 65, 'http_counter', 1, null, 'The example demonstrates a counter dapp and an HTTP interface. It is essentially an iteration on the counter canister which adds native HTTP interfaces.', null, null, '{"Definitions":[{"Id":"Token","Data":[{"Nat":null,"Name":"arbitrary_data","Data":"text","NatData":null,"NameData":null}]},{"Id":"StreamingStrategy","Data":[{"Nat":null,"Name":"Callback","Data":null,"NatData":null,"NameData":"CallbackStrategy"}]},{"Id":"StreamingCallbackHttpResponse","Data":[{"Nat":null,"Name":"body","Data":{},"NatData":null,"NameData":null},{"Nat":null,"Name":"token","Data":{"Data":"Token"},"NatData":null,"NameData":null}]},{"Id":"HttpResponse","Data":[{"Nat":null,"Name":"body","Data":{},"NatData":null,"NameData":null},{"Nat":null,"Name":"headers","Data":{"Data":"HeaderField"},"NatData":null,"NameData":null},{"Nat":null,"Name":"status_code","Data":"nat16","NatData":null,"NameData":null},{"Nat":null,"Name":"streaming_strategy","Data":{"Data":"StreamingStrategy"},"NatData":null,"NameData":null},{"Nat":null,"Name":"upgrade","Data":{"Data":"bool"},"NatData":null,"NameData":null}]},{"Id":"HttpRequest","Data":[{"Nat":null,"Name":"body","Data":{},"NatData":null,"NameData":null},{"Nat":null,"Name":"headers","Data":{"Data":"HeaderField"},"NatData":null,"NameData":null},{"Nat":null,"Name":"method","Data":"text","NatData":null,"NameData":null},{"Nat":null,"Name":"url","Data":"text","NatData":null,"NameData":null}]},{"Id":"HeaderField","Data":[{"Nat":null,"Name":null,"Data":"text","NatData":null,"NameData":null},{"Nat":null,"Name":null,"Data":"text","NatData":null,"NameData":null}]},{"Id":"CallbackStrategy","Data":[{"Nat":null,"Name":"callback","Data":{"ArgTypes":[{"Name":null,"Data":"Token"}],"ResTypes":[{"Name":null,"Data":"StreamingCallbackHttpResponse"}],"Annotation":"query"},"NatData":null,"NameData":null},{"Nat":null,"Name":"token","Data":null,"NatData":null,"NameData":"Token"}]}],"Services":[{"ID":null,"Methods":[{"Name":"http_request","Func":{"ArgTypes":[{"Name":null,"Data":"HttpRequest"}],"ResTypes":[{"Name":null,"Data":"HttpResponse"}],"Annotation":"query"},"ID":null},{"Name":"http_request_update","Func":{"ArgTypes":[{"Name":null,"Data":"HttpRequest"}],"ResTypes":[{"Name":null,"Data":"HttpResponse"}],"Annotation":null},"ID":null},{"Name":"http_streaming","Func":{"ArgTypes":[{"Name":null,"Data":"Token"}],"ResTypes":[{"Name":null,"Data":"StreamingCallbackHttpResponse"}],"Annotation":"query"},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/http_counter.git', 'http_counter', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/http_counter/main/src/main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (66, 66, 'persistent_storage', 1, null, 'The example dapp shows how to build a simple dapp in Motoko, which will have persistent storage. The dapp is a simple counter, which will increment a counter, retrieve the counter value and reset the counter value by calling backend functions.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"get","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":"query"},"ID":null},{"Name":"increment","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":null},"ID":null},{"Name":"reset","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/persistent_storage.git', 'persistent_storage', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/persistent_storage/main/src/persistent_storage/main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (67, 67, 'quicksort', 1, null, 'This example implements the quick sort algorithm.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"sort","Func":{"ArgTypes":[{"Name":null,"Data":{"Data":"int"}}],"ResTypes":[{"Name":null,"Data":{"Data":"int"}}],"Annotation":"query"},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/quicksort.git', 'quicksort', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/quicksort/main/src/Main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (68, 68, 'random_maze', 1, null, 'The example generates a random maze using cryptographic randomness.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"generate","Func":{"ArgTypes":[{"Name":null,"Data":"nat"}],"ResTypes":[{"Name":null,"Data":"text"}],"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/random_maze.git', 'random_maze', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/random_maze/main/src/random_maze/Main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (69, 69, 'send_http_post', 1, null, 'The purpose of this dapp is to give developers a minimal dapp that uses the IC''s HTTPS outcalls feature to make a POST request.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"send_http_post_request","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"text"}],"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/send_http_post.git', 'send_http_post', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/send_http_post/main/src/send_http_post_backend/main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (70, 70, 'simple_to_do', 1, null, 'This example illustrates how to create a simple to-do checklist application.', null, null, '{"Definitions":[{"Id":"ToDo","Data":[{"Nat":null,"Name":"completed","Data":"bool","NatData":null,"NameData":null},{"Nat":null,"Name":"description","Data":"text","NatData":null,"NameData":null}]}],"Services":[{"ID":null,"Methods":[{"Name":"addTodo","Func":{"ArgTypes":[{"Name":null,"Data":"text"}],"ResTypes":[{"Name":null,"Data":"nat"}],"Annotation":null},"ID":null},{"Name":"clearCompleted","Func":{"ArgTypes":null,"ResTypes":null,"Annotation":null},"ID":null},{"Name":"completeTodo","Func":{"ArgTypes":[{"Name":null,"Data":"nat"}],"ResTypes":null,"Annotation":null},"ID":null},{"Name":"getTodos","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":{"Data":"ToDo"}}],"Annotation":"query"},"ID":null},{"Name":"showTodos","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":"text"}],"Annotation":"query"},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/simple_to_do.git', 'simple_to_do', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/simple_to_do/main/src/Main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (71, 71, 'superheroes', 1, null, 'This example demonstrates how to build a CRUD application on the Internet Computer using Motoko ', null, null, '{"Definitions":[{"Id":"SuperheroId","Data":"nat32"},{"Id":"Superhero","Data":[{"Nat":null,"Name":"name","Data":"text","NatData":null,"NameData":null},{"Nat":null,"Name":"superpowers","Data":null,"NatData":null,"NameData":"List"}]},{"Id":"List","Data":{"Data":[{"Nat":null,"Name":null,"Data":"text","NatData":null,"NameData":null},{"Nat":null,"Name":null,"Data":null,"NatData":null,"NameData":"List"}]}}],"Services":[{"ID":null,"Methods":[{"Name":"create","Func":{"ArgTypes":[{"Name":null,"Data":"Superhero"}],"ResTypes":[{"Name":null,"Data":"SuperheroId"}],"Annotation":null},"ID":null},{"Name":"delete","Func":{"ArgTypes":[{"Name":null,"Data":"SuperheroId"}],"ResTypes":[{"Name":null,"Data":"bool"}],"Annotation":null},"ID":null},{"Name":"read","Func":{"ArgTypes":[{"Name":null,"Data":"SuperheroId"}],"ResTypes":[{"Name":null,"Data":{"Data":"Superhero"}}],"Annotation":"query"},"ID":null},{"Name":"update","Func":{"ArgTypes":[{"Name":null,"Data":"SuperheroId"},{"Name":null,"Data":"Superhero"}],"ResTypes":[{"Name":null,"Data":"bool"}],"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/superheroes.git', 'superheroes', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/superheroes/main/src/superheroes/Main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'Main.mo');
INSERT INTO aline.t_template_detail (id, template_id, name, audited, extensions, description, examples, resources, abi_info, byte_code, author, repository_url, repository_name, branch, version, code_sources, create_time, update_time, delete_time, title, title_description, label_display, how_use_description, gist_id, default_file) VALUES (72, 72, 'threshold_ecdsa', 1, null, 'We present a minimal example canister smart contract for showcasing the threshold ECDSA API.', null, null, '{"Definitions":null,"Services":[{"ID":null,"Methods":[{"Name":"public_key","Func":{"ArgTypes":null,"ResTypes":[{"Name":null,"Data":[{"Nat":null,"Name":"Err","Data":"text","NatData":null,"NameData":null},{"Nat":null,"Name":"Ok","Data":[{"Nat":null,"Name":"public_key_hex","Data":"text","NatData":null,"NameData":null}],"NatData":null,"NameData":null}]}],"Annotation":null},"ID":null},{"Name":"sign","Func":{"ArgTypes":[{"Name":null,"Data":"text"}],"ResTypes":[{"Name":null,"Data":[{"Nat":null,"Name":"Err","Data":"text","NatData":null,"NameData":null},{"Nat":null,"Name":"Ok","Data":[{"Nat":null,"Name":"signature_hex","Data":"text","NatData":null,"NameData":null}],"NatData":null,"NameData":null}]}],"Annotation":null},"ID":null}],"MethodId":null}]}', null, 'hamster-template', 'https://github.com/hamster-template/threshold_ecdsa.git', 'threshold_ecdsa', 'main', '1.0.0', 'https://raw.githubusercontent.com/hamster-template/threshold_ecdsa/main/src/ecdsa_example_motoko/main.mo', '2023-08-25 13:54:02', '2023-08-25 13:54:02', null, null, null, null, null, null, 'main.mo');
