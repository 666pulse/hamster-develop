name: "aline build"
on:
  push:
    branches:
      - master
      - develop

jobs:
  package:
    strategy:
      matrix:
        platform: [ ubuntu-latest,windows-latest,macos-latest ]
        go-version: [ 1.19 ]
        node-version: [18]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # You may need to manually build you frontend manually here, unless you have configured frontend build and install commands in wails.json.
      - name: build
        if: matrix.platform == 'ubuntu-latest'
        run:  make web linux
      - name: upload artifacts
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: aline-linux-amd64
          path: aline

      - name: build
        if: matrix.platform == 'windows-latest'
        run:  make web windows
      - name: upload artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: aline-windows-amd64
          path: aline.exe

      - name: build
        if: matrix.platform == 'macos-latest'
        run:  make web macos
      - name: MacOS download gon for code signing and app notarization
        if: matrix.platform == 'macos-latest'
        run: |
          brew install mitchellh/gon/gon
      - name: Import Code-Signing Certificates for macOS
        if: matrix.platform == 'macos-latest'
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - name: Sign our macOS binary
        if: matrix.platform == 'macos-latest'
        run: |
          echo "Signing Package"
          gon -log-level=info ./build/darwin/gon-sign.json
        env:
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      - name: upload artifacts macOS
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: aline-darwin-amd64
          path: aline.dmg
