apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamster-aline-worker-1
  labels:
    app: hamster-aline-worker-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hamster-aline-worker-1
  template:
    metadata:
      labels:
        app: hamster-aline-worker-1
    spec:
      containers:
        - name: hamster-aline-worker-1
          image: hamstershare/hamster-develop-worker:${PIPELINE_ID}
          imagePullPolicy: Always
          env:
            - name: MASTER_ADDRESS
              value: hamster-aline-master:50001
            - name: DOCKER_HOST
              value: tcp://${DOCKER2_IP}
            - name: DOCKER_CERT_PATH
              value: /certs/client
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: openai_api_key
            - name: CLIENT_SECRETS
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: client_secrets
            - name: APPS_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: apps_client_id
            - name: APPS_CLIENT_SECRETS
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: apps_client_secerts
            - name: GATEWAY
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: gateway
            - name: AZURE_API_KEY
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: AZURE_API_KEY
            - name: AZURE_API_BASE
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: AZURE_API_BASE
            - name: AZURE_DEPLOYMENT_NAME
              valueFrom:
                configMapKeyRef:
                  name: hamster-aline
                  key: AZURE_DEPLOYMENT_NAME
          volumeMounts:
            - mountPath: /certs
              name: docker2-tls
              readOnly: true
            - name: kubeconfig
              mountPath: "/root/.kube"
              readOnly: true
      volumes:
        - name: docker2-tls
          persistentVolumeClaim:
            claimName: docker2-tls
        - name: kubeconfig
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: kubeconfig
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "kubeconfig"
                path: "config"